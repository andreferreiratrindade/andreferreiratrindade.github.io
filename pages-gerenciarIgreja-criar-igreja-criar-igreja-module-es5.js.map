{"version":3,"sources":["webpack:///src/app/pages/gerenciarIgreja/criar-igreja/criar-igreja.page.html","webpack:///src/app/entity/igrejaEntity.ts","webpack:///src/app/pages/gerenciarIgreja/criar-igreja/criar-igreja.module.ts","webpack:///src/app/pages/gerenciarIgreja/criar-igreja/criar-igreja.page.scss","webpack:///src/app/pages/gerenciarIgreja/criar-igreja/criar-igreja.page.ts","webpack:///src/app/providers/igreja/igreja.service.ts","webpack:///src/app/repository/igreja/igreja-rep.service.ts"],"names":["IgrejaEntity","nomeIgreja","cep","uf","cidade","bairro","logradouro","routes","path","component","CriarIgrejaPageModule","imports","forChild","declarations","CriarIgrejaPage","buscarCEPService","igrejaService","router","ngZone","fireBaseService","validation_messages","type","message","igrejaEntity","formData","compose","required","buscarCEP","value","then","x","localidade","enderecoCompleto","RecuperaEnderecoCompleto","AdicionarNovaIgreja","error","console","log","selector","template","IgrejaService","igrejaRepService","obj","add","providedIn","IgrejaRepService"],"mappings":"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","file":"pages-gerenciarIgreja-criar-igreja-criar-igreja-module-es5.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content class=\\\"sign-up-content\\\">\\n  <h2 class=\\\"auth-title\\\">\\n    Cadastrar Igreja\\n  </h2>\\n  <form [formGroup]=\\\"formData\\\" (ngSubmit)=\\\"salvarIgreja()\\\">\\n    <ion-list class=\\\"inputs-list\\\" lines=\\\"full\\\">\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label floating>Igreja:</ion-label>\\n\\n        <ion-input type=\\\"text\\\" formControlName=\\\"nomeIgreja\\\" clearInput autocapitalize=\\\"off\\\"></ion-input>\\n      </ion-item>\\n      <app-mensagem-validacao [validation_messages_object]=\\\"validation_messages.nomeIgreja\\\" [form]=\\\"formData\\\"\\n        [nomeCampo]=\\\"'nomeIgreja'\\\"></app-mensagem-validacao>\\n\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label floating>Cep:</ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"cep\\\" clearInput autocapitalize=\\\"off\\\"></ion-input>\\n      </ion-item>\\n      <app-mensagem-validacao [validation_messages_object]=\\\"validation_messages.cep\\\" [form]=\\\"formData\\\"\\n        [nomeCampo]=\\\"'cep'\\\"></app-mensagem-validacao>\\n      <button type=\\\"button\\\" (click)=\\\"buscarEnderecoPorCEP()\\\">Buscar endereço</button>\\n\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label floating>{{enderecoCompleto}}</ion-label>\\n      </ion-item>\\n     \\n    </ion-list>\\n\\n    <ion-button class=\\\"sign-up-btn\\\" type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"!formData.valid && igrejaEntity.cep.lenght > 0\\\">Cadastrar</ion-button>\\n    <div class=\\\"error-container\\\" *ngIf=\\\"submitError\\\">\\n      <div class=\\\"error-message\\\">\\n        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n        <span>{{ submitError }}</span>\\n      </div>\\n    </div>\\n\\n  </form>\\n\\n\\n</ion-content>\";","export class IgrejaEntity{\n    nomeIgreja:string = \"\";\n    cep:string= \"\";\n    uf:string= \"\";\n    cidade:string= \"\";\n    bairro:string= \"\";\n    logradouro : string= \"\";\n\n    RecuperaEnderecoCompleto(){\n        return  this.logradouro + \", \" + this.bairro+ \" - \" +this.cidade + \"/\" +this.uf + \" - \" + this.cep;\n    }\n\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CriarIgrejaPageRoutingModule } from './criar-igreja-routing.module';\n\nimport { CriarIgrejaPage } from './criar-igreja.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { RouterModule, Routes } from '@angular/router';\nconst routes: Routes = [\n  {\n    path: '',\n    component: CriarIgrejaPage,\n  }\n];\n@NgModule({\n\n    imports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      ComponentsModule,\n      IonicModule,\n      RouterModule.forChild(routes),\n  \n  ],\n  declarations: [CriarIgrejaPage]\n})\nexport class CriarIgrejaPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2dlcmVuY2lhcklncmVqYS9jcmlhci1pZ3JlamEvY3JpYXItaWdyZWphLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit, NgZone } from '@angular/core';\nimport { BuscarCEPService } from 'src/app/providers/buscaCEP/buscar-cep.service';\nimport { FormGroup, Validators, FormBuilder, FormControl } from '@angular/forms';\nimport { IgrejaEntity } from 'src/app/entity/igrejaEntity';\nimport { IgrejaService } from 'src/app/providers/igreja/igreja.service';\nimport { Config } from 'src/app/config';\nimport { Router } from '@angular/router';\nimport { FirebaseAuthService } from 'src/app/providers/base-provider/firebase-auth-service.service';\n\n@Component({\n  selector: 'app-criar-igreja',\n  templateUrl: './criar-igreja.page.html',\n  styleUrls: ['./criar-igreja.page.scss'],\n})\nexport class CriarIgrejaPage implements OnInit {\n\n  private enderecoCompleto : string\n  private igrejaEntity : IgrejaEntity\n  public formData: FormGroup;\n\n  validation_messages = {\n    'nomeIgreja': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ],\n    'cep': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ]\n  };\n  constructor(public buscarCEPService : BuscarCEPService,\n      public igrejaService:IgrejaService,\n      public router: Router,\n      private ngZone: NgZone,\n      public fireBaseService: FirebaseAuthService \n    ) {\n      this.igrejaEntity = new IgrejaEntity();\n\n\n      this.formData = new FormGroup({\n        'cep': new FormControl('', Validators.compose([\n          Validators.required\n        ])),\n        'nomeIgreja': new FormControl('', Validators.compose([\n          Validators.required\n        ]))\n      });\n   }\n\n  ngOnInit() {\n    \n  }\n\n  buscarEnderecoPorCEP(){\n\n    this.buscarCEPService.buscarCEP(this.formData.value['cep']).then(x=>{\n\n      this.igrejaEntity.cidade = x.localidade;\n      this.igrejaEntity.bairro = x.bairro;\n      this.igrejaEntity.uf = x.uf;\n      this.igrejaEntity.logradouro = x.logradouro;\n      this.igrejaEntity.cep = x.cep;\n\n      this.enderecoCompleto = this.igrejaEntity.RecuperaEnderecoCompleto();\n\n    }).catch(x=>{\n      this.igrejaEntity = new IgrejaEntity(); \n        this.enderecoCompleto = \"CEP não encontrado.\"\n    });\n  }\n\n  salvarIgreja(){\n\n    this.igrejaEntity.nomeIgreja = this.formData.value['nomeIgreja'];\n    this.igrejaService.AdicionarNovaIgreja( this.igrejaEntity).then(x=>{\n          \n\n    }).catch((error) => {\n      // Handle Errors here.\n      console.log(error);\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { IgrejaRepService } from 'src/app/repository/igreja/igreja-rep.service';\nimport { IgrejaEntity } from 'src/app/entity/igrejaEntity';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IgrejaService {\n\n  constructor(public igrejaRepService: IgrejaRepService) { }\n\n\n  AdicionarNovaIgreja(obj : IgrejaEntity) : Promise<any>{\n    return  this.igrejaRepService.add(\"igreja/\",obj);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IgrejaEntity } from 'src/app/entity/igrejaEntity';\nimport { BaseRepository } from '../repository-interface/Repository-Base';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IgrejaRepService extends BaseRepository<IgrejaEntity>  {\n\n}\n"]}
{"version":3,"sources":["webpack:///src/app/pages/gerenciarIgreja/criar-igreja/criar-igreja.page.html","webpack:///src/app/pages/gerenciarIgreja/criar-igreja/criar-igreja.module.ts","webpack:///src/app/pages/gerenciarIgreja/criar-igreja/criar-igreja.page.scss","webpack:///src/app/pages/gerenciarIgreja/criar-igreja/criar-igreja.page.ts"],"names":["routes","path","component","CriarIgrejaPageModule","imports","forChild","declarations","CriarIgrejaPage","buscarCEPService","igrejaService","router","toastCtrl","loadingControll","ngZone","usuarioService","igrejaEntity","validation_messages","type","message","formData","compose","required","value","toString","length","handler","showLoader","buscarCEP","then","x","erro","cidade","localidade","bairro","uf","logradouro","cep","hideLoader","valid","nomeIgreja","administradores","usuarioId","RecuperaInstancia","recuperaUsuario","AdicionarNovaIgreja","SucessoToast","run","navigate","error","RecuperaUsuarioPorEmail","emailAdministrador","result","administradorUsuarioId","selector","template"],"mappings":"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","file":"pages-gerenciarIgreja-criar-igreja-criar-igreja-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Adicionar Igreja\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n  <form [formGroup]=\\\"formData\\\" (ngSubmit)=\\\"salvarIgreja()\\\">\\n    <ion-list class=\\\"inputs-list\\\" lines=\\\"full\\\">\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label position=\\\"floating\\\">Nome Igreja <ion-text color=\\\"danger\\\">*</ion-text>\\n        </ion-label>\\n\\n        <ion-input type=\\\"text\\\" formControlName=\\\"nomeIgreja\\\" clearInput autocapitalize=\\\"off\\\"></ion-input>\\n      </ion-item>\\n      <app-mensagem-validacao [validation_messages_object]=\\\"validation_messages.nomeIgreja\\\" [form]=\\\"formData\\\"\\n        [nomeCampo]=\\\"'nomeIgreja'\\\"></app-mensagem-validacao>\\n\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label position=\\\"floating\\\">Cep <ion-text color=\\\"danger\\\">*</ion-text>\\n        </ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"cep\\\" clearInput autocapitalize=\\\"off\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-chip color=\\\"tertiary\\\" (click)=\\\"submitError='';buscarEnderecoPorCEP()\\\" size=\\\"6\\\">\\n        <ion-label>Buscar Endereço</ion-label>\\n        <ion-icon name=\\\"search-outline\\\"></ion-icon>\\n      </ion-chip>\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label class=\\\"ion-text-wrap\\\" *ngIf=\\\"igrejaEntity.logradouro\\\">\\n          <p>{{igrejaEntity.logradouro}}, {{igrejaEntity.bairro}} - {{igrejaEntity.cidade}} / {{igrejaEntity.uf}}</p>\\n        </ion-label>\\n\\n        <!-- <ion-button color=\\\"tertiary\\\" type=\\\"button\\\" (click)=\\\"submitError='';buscarEnderecoPorCEP()\\\" [submitError]=\\\"\\\">Buscar endereço</ion-button> -->\\n        <app-mensagem-validacao [validation_messages_object]=\\\"validation_messages.cep\\\" [form]=\\\"formData\\\"\\n          [nomeCampo]=\\\"'cep'\\\"></app-mensagem-validacao>\\n      </ion-item>\\n\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label position=\\\"floating\\\">Email do Administrador da Igreja <ion-text color=\\\"danger\\\">*</ion-text>\\n        </ion-label>\\n        <ion-input type=\\\"text\\\" formControlName=\\\"emailAdministrador\\\" clearInput autocapitalize=\\\"off\\\"></ion-input>\\n      </ion-item>\\n      <ion-chip color=\\\"tertiary\\\" (click)=\\\"buscarUsuarioAdministradorIgreja()\\\" size=\\\"6\\\">\\n        <ion-label>Buscar Usuário</ion-label>\\n        <ion-icon name=\\\"search-outline\\\"></ion-icon>\\n      </ion-chip>\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label class=\\\"ion-text-wrap\\\" *ngIf=\\\"igrejaEntity.nomeUsuarioAdministrador\\\">\\n          <p>{{igrejaEntity.nomeUsuarioAdministrador}}</p>\\n          <p>{{igrejaEntity.emailUsuarioAdministrador}}</p>\\n        </ion-label>\\n      </ion-item>\\n      <app-mensagem-validacao [validation_messages_object]=\\\"validation_messages.emailAdministrador\\\" [form]=\\\"formData\\\"\\n        [nomeCampo]=\\\"'emailAdministrador'\\\"></app-mensagem-validacao>\\n      </ion-item>\\n\\n    </ion-list>\\n    <ion-button class=\\\"sign-up-btn\\\" type=\\\"submit\\\" [submitError]=\\\"\\\" expand=\\\"block\\\">\\n      Cadastrar</ion-button>\\n  </form>\\n\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CriarIgrejaPageRoutingModule } from './criar-igreja-routing.module';\n\nimport { CriarIgrejaPage } from './criar-igreja.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\nimport { RouterModule, Routes } from '@angular/router';\nconst routes: Routes = [\n  {\n    path: '',\n    component: CriarIgrejaPage,\n  }\n];\n@NgModule({\n\n    imports: [\n      CommonModule,\n      FormsModule,\n      ReactiveFormsModule,\n      ComponentsModule,\n      IonicModule,\n      RouterModule.forChild(routes),\n  \n  ],\n  declarations: [CriarIgrejaPage]\n})\nexport class CriarIgrejaPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2dlcmVuY2lhcklncmVqYS9jcmlhci1pZ3JlamEvY3JpYXItaWdyZWphLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit, NgZone } from '@angular/core';\nimport { BuscarCEPService } from 'src/app/providers/buscaCEP/buscar-cep.service';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\n\nimport { IgrejaService } from 'src/app/providers/igreja/igreja.service';\nimport { Config } from 'src/app/config';\nimport { Router } from '@angular/router';\nimport { UsuarioService } from 'src/app/providers/usuario/usuario.service';\nimport { HandlerError } from 'src/app/helpers/handlerError';\nimport { ToastController } from '@ionic/angular';\nimport { LoadingContr } from 'src/app/helpers/loadingContr';\nimport { ToastCustom } from 'src/app/helpers/toastCustom';\n\n@Component({\n  selector: 'app-criar-igreja',\n  templateUrl: './criar-igreja.page.html',\n  styleUrls: ['./criar-igreja.page.scss'],\n})\nexport class CriarIgrejaPage implements OnInit {\n\n  private igrejaEntity: any = {}\n  public formData: FormGroup;\n  public enderecoParte1:string;\n  public enderecoParte2:string;\n  validation_messages = {\n    'nomeIgreja': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ],\n    'cep': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ], 'emailAdministrador': [\n      { type: 'required', message: 'Campo de preenchimento obrigatório.' },\n    ]\n  };\n  constructor(public buscarCEPService: BuscarCEPService,\n    public igrejaService: IgrejaService,\n    public router: Router,\n    public toastCtrl: ToastController,\n    public loadingControll:LoadingContr,\n    public ngZone:NgZone,\n    public usuarioService:UsuarioService,\n  ) {\n\n    this.formData = new FormGroup({\n      'cep': new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      'nomeIgreja': new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      'emailAdministrador': new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      \n    });\n\n  }\n\n  ngOnInit() {\n    \n  }\n\n  buscarEnderecoPorCEP() {\n\n    this.igrejaEntity = {};\n    if(!this.formData.value['cep'] || this.formData.value['cep'].toString().length != \"8\"){\n      HandlerError.handler(\"Favor inserir CEP válido, antes de continuar.\", this.toastCtrl);\n      return false;\n    }\n    this.loadingControll.showLoader();\n\n\n    this.buscarCEPService.buscarCEP(this.formData.value['cep']).then(x => {\n  \n      if (x && !x.erro) {\n        this.igrejaEntity.cidade = x.localidade;\n        this.igrejaEntity.bairro = x.bairro;\n        this.igrejaEntity.uf = x.uf;\n        this.igrejaEntity.logradouro = x.logradouro;\n        this.igrejaEntity.cep = x.cep;\n\n        this.loadingControll.hideLoader();\n      }else{\n        this.loadingControll.hideLoader()\n        HandlerError.handler(\"Favor inserir CEP válido, antes de continuar.\", this.toastCtrl);\n      }\n\n    }).catch(x => {\n      this.loadingControll.hideLoader();\n      HandlerError.handler(x, this.toastCtrl);\n    });\n\n  }\n\n  salvarIgreja() {\n    if (!this.igrejaEntity || !this.igrejaEntity.cidade) {\n      HandlerError.handler(\"Favor inserir CEP válido, antes de continuar.\", this.toastCtrl);\n      return false;\n    }\n\n    if(!this.formData.valid ){\n      HandlerError.handler(\"Favor preencher todos os campos devidamente sinalizados antes de continuar.\",this.toastCtrl)\n      return false;\n    }\n\n    this.loadingControll.showLoader()\n    \n    this.igrejaEntity.nomeIgreja = this.formData.value['nomeIgreja'];\n    this.igrejaEntity.administradores = [{usuarioId:Config.RecuperaInstancia().recuperaUsuario().usuarioId}];\n    this.igrejaService.AdicionarNovaIgreja(this.igrejaEntity).then(() => {\n      this.loadingControll.hideLoader();\n\n      ToastCustom.SucessoToast(this.toastCtrl);\n      this.ngZone.run(() => {\n        this.router.navigate(['home']);\n      });\n\n    }).catch((error) => {\n      HandlerError.handler(error, this.toastCtrl);\n      this.loadingControll.hideLoader();\n\n    });  \n  }\n\n  buscarUsuarioAdministradorIgreja(){\n    this.loadingControll.showLoader();\n\n    this.usuarioService.RecuperaUsuarioPorEmail(this.formData.value.emailAdministrador).then(result=>{\n        if(result.length > 0){\n           this.formData.value.administradorUsuarioId = result[0].usuarioId;\n        }else{\n          HandlerError.handler(\"Nenhum usuário encontrado com este e-mail.\", this.toastCtrl);\n        }\n      }).catch((error) => {\n        HandlerError.handler(error, this.toastCtrl);\n        this.loadingControll.hideLoader();\n  \n      });  \n    }\n}\n"]}
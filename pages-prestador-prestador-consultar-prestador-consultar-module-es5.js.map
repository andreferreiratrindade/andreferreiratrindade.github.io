{"version":3,"sources":["webpack:///src/app/pages/prestador/prestador-consultar/prestador-consultar.page.html","webpack:///src/app/pages/prestador/prestador-consultar/prestador-consultar-routing.module.ts","webpack:///src/app/pages/prestador/prestador-consultar/prestador-consultar.module.ts","webpack:///src/app/pages/prestador/prestador-consultar/prestador-consultar.page.scss","webpack:///src/app/pages/prestador/prestador-consultar/prestador-consultar.page.ts","webpack:///src/app/providers/favorito/favorito.service.ts","webpack:///src/app/repository/favorito/favorito-rep.service.ts"],"names":["routes","path","component","PrestadorConsultarPageRoutingModule","imports","forChild","exports","PrestadorConsultarPageModule","declarations","PrestadorConsultarPage","prestadorService","toastCtrl","igrejaService","usuarioService","loadingContr","dominioServicoService","router","modalCtrl","callNumber","favoritoService","validation_messages","type","message","formulario","compose","required","prestadores","showLoader","recuperaDominioServico","then","result","servicos","hideLoader","x","handler","value","RecuperaCidadePrestadorDisponiveis","cidadeList","formularioValido","CustomToast","Mensagens","CamposObrigatorios","RecuperaPestadoresPesquisar","igrejaId","prestadoresResult","length","lstusuarioId","map","usuarioId","lstIgrejaId","igrejas","consultaMasterPrestador","Promise","reject","recuperaNomeIgreja","err","recuperaNomePrestadores","recuperaServicosPorPrestadores","servicosPorPrestador","find","y","RecuperaNomeUsuarios","usuariosResult","nome","data","email","ionContent","scrollToPoint","RecuperaNomeIgreja","resultIgreja","nomeIgreja","id","staMembro","navigate","queryParams","modal","create","componentProps","backdropDismiss","present","onWillDismiss","resultModal","nomeServico","servicoId","uf","cidade","bairro","telefone","AdicionaPrestadorFavorito","RecuperaInstancia","recuperaUsuario","RemovePrestadorFavorito","selector","template","FavoritoService","favoritoRepService","prestadorUsuarioId","providedIn","FavoritoRepService","ref","db","collection","doc","obj","retorno","runTransaction","transaction","get","favorito","set","filter","push","update","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,mCAAmC;AAAA;AAAA,KAAhD;;AAAaA,uCAAmC,6DAJ/C,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAI+C,GAAnCH,mCAAmC,CAAnC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMb,QAAaI,4BAA4B;AAAA;AAAA,KAAzC;;AAAaA,gCAA4B,6DAXxC,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,qFAJO,EAKP,0DALO,EAMP,uGANO,CADD;AASRI,kBAAY,EAAE,CAAC,gFAAD;AATN,KAAT,CAWwC,GAA5BD,4BAA4B,CAA5B;;;;;;;;;;;;;;;;ACtBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACyBf,QAAaE,sBAAsB;AAgB/B,sCAAmBC,gBAAnB,EACWC,SADX,EAEWC,aAFX,EAGWC,cAHX,EAIWC,YAJX,EAKWC,qBALX,EAMWC,MANX,EAOWC,SAPX,EAQYC,UARZ,EASYC,eATZ,EAS4C;AAAA;;AATzB,aAAAT,gBAAA,GAAAA,gBAAA;AACR,aAAAC,SAAA,GAAAA,SAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AACA,aAAAC,qBAAA,GAAAA,qBAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,SAAA,GAAAA,SAAA;AACC,aAAAC,UAAA,GAAAA,UAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AAlBZ,aAAAC,mBAAA,GAAsB;AAClB,gBAAM,CACF;AAAEC,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADE,CADY;AAIlB,uBAAa,CACT;AAAED,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADS;AAJK,SAAtB;AAqBI,aAAKC,UAAL,GAAkB,IAAI,wDAAJ,CAAc;AAC5B,gBAAM,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWC,OAAX,CAAmB,CACzC,0DAAWC,QAD8B,CAAnB,CAApB,CADsB;AAI5B,oBAAU,IAAI,0DAAJ,EAJkB;AAK5B,oBAAU,IAAI,0DAAJ,EALkB;AAM5B,yBAAe,IAAI,0DAAJ,EANa;AAO5B,wBAAc,IAAI,0DAAJ,EAPc;AAQ5B,sBAAY,IAAI,0DAAJ;AARgB,SAAd,CAAlB;AAUA,aAAKC,WAAL,GAAmB,EAAnB;AACH;;AAvC8B;AAAA;AAAA,mCAyCpB;AAAA;;AACP,eAAKZ,YAAL,CAAkBa,UAAlB;AAEA,eAAKZ,qBAAL,CAA2Ba,sBAA3B,GACKC,IADL,CACU,UAAAC,MAAM,EAAI;AACZ,iBAAI,CAACC,QAAL,GAAgBD,MAAhB;;AACA,iBAAI,CAAChB,YAAL,CAAkBkB,UAAlB;AAEH,WALL,WAKa,UAAAC,CAAC,EAAI;AACV,iBAAI,CAACnB,YAAL,CAAkBkB,UAAlB;;AACA,sFAAaE,OAAb,CAAqBD,CAArB,EAAwB,KAAI,CAACtB,SAA7B;AACH,WARL;AASH;AArD8B;AAAA;AAAA,wCAuDf;AAAA;;AACZ,eAAKG,YAAL,CAAkBa,UAAlB;AACA,eAAKJ,UAAL,CAAgBY,KAAhB,CAAsB,QAAtB,IAAkC,EAAlC;AACA,eAAKzB,gBAAL,CAAsB0B,kCAAtB,CAAyD,KAAKb,UAAL,CAAgBY,KAAhB,CAAsB,IAAtB,CAAzD,EACKN,IADL,CACU,UAAAC,MAAM,EAAI;AACZ,kBAAI,CAACO,UAAL,GAAkBP,MAAlB;;AACA,kBAAI,CAAChB,YAAL,CAAkBkB,UAAlB;AACH,WAJL,WAIa,UAAAC,CAAC,EAAI;AACV,kBAAI,CAACnB,YAAL,CAAkBkB,UAAlB;;AACA,sFAAaE,OAAb,CAAqBD,CAArB,EAAwB,MAAI,CAACtB,SAA7B;AACH,WAPL;AAQH;AAlE8B;AAAA;AAAA,6CAoEV;AAAA;;AACjB,cAAI,CAAC,KAAK2B,gBAAL,EAAL,EAA8B;AAC1B,qFAAYC,WAAZ,CAAwB,KAAK5B,SAA7B,EAAwC,mEAAU6B,SAAV,CAAoBC,kBAA5D,EAAgF,QAAhF,EAA0F,IAA1F;AAEA,mBAAO,KAAP;AACH;;AACD,eAAKf,WAAL,GAAmB,EAAnB;AACA,eAAKZ,YAAL,CAAkBa,UAAlB;AAEA,eAAKjB,gBAAL,CACKgC,2BADL,CAEQ,KAAKnB,UAAL,CAAgBY,KAAhB,CAAsB,IAAtB,CAFR,EAGU,KAAKZ,UAAL,CAAgBY,KAAhB,CAAsB,QAAtB,CAHV,EAIU,KAAKZ,UAAL,CAAgBY,KAAhB,CAAsB,QAAtB,CAJV,EAKU,KAAKZ,UAAL,CAAgBY,KAAhB,CAAsB,WAAtB,CALV,EAMU,KAAKZ,UAAL,CAAgBY,KAAhB,CAAsBQ,QANhC,EAOKd,IAPL,CAOU,UAAAe,iBAAiB,EAAI;AACvB,gBAAI,CAACA,iBAAD,IAAsBA,iBAAiB,CAACC,MAAlB,IAA4B,CAAtD,EAAyD;AACrD,uFAAYN,WAAZ,CAAwB,MAAI,CAAC5B,SAA7B,EAAwC,8BAAxC,EAAwE,QAAxE,EAAkF,IAAlF;;AACA,oBAAI,CAACG,YAAL,CAAkBkB,UAAlB;;AACA,qBAAO,KAAP;AACH;;AACD,gBAAIc,YAAY,GAAG,EAAnB;AACAA,wBAAY,GAAGF,iBAAiB,CAACG,GAAlB,CAAsB,UAAAd,CAAC,EAAI;AAAE,qBAAOA,CAAC,CAACe,SAAT;AAAoB,aAAjD,CAAf;AACA,kBAAI,CAACtB,WAAL,GAAmBkB,iBAAnB;AAEA,gBAAIK,WAAW,GAAG,EAAlB;AACAA,uBAAW,GAAGL,iBAAiB,CAACG,GAAlB,CAAsB,UAAAd,CAAC,EAAI;AAAE,qBAAOA,CAAC,CAACiB,OAAF,CAAU,CAAV,EAAaP,QAApB;AAA8B,aAA3D,CAAd;;AAEA,kBAAI,CAACQ,uBAAL,CAA6BL,YAA7B,EAA2CG,WAA3C,EAAwDpB,IAAxD,CAA6D,YAAM;AAC/D,oBAAI,CAACf,YAAL,CAAkBkB,UAAlB;AAEH,aAHD,WAGS,UAAAC,CAAC,EAAI;AACV,wFAAaC,OAAb,CAAqBD,CAArB,EAAwB,MAAI,CAACtB,SAA7B;;AACA,oBAAI,CAACG,YAAL,CAAkBkB,UAAlB;AACH,aAND;AAQH,WA5BL,WA4Ba,UAAAC,CAAC,EAAI;AACV,sFAAaC,OAAb,CAAqBD,CAArB,EAAwB,MAAI,CAACtB,SAA7B;;AACA,kBAAI,CAACG,YAAL,CAAkBkB,UAAlB;AACH,WA/BL;AAgCH;AA7G8B;AAAA;AAAA,gDA+GCc,YA/GD,EA+GeG,WA/Gf,EA+G0B;AAAA;;AACrD,iBAAO,IAAIG,OAAJ,CAAiB,UAACtB,MAAD,EAASuB,MAAT,EAAoB;AACxC;AACA,kBAAI,CAACC,kBAAL,CAAwBL,WAAxB,EAAqCpB,IAArC,CAA0C,YAAM;AAAEC,oBAAM;AAAI,aAA5D,WAAoE,UAAAyB,GAAG,EAAI;AAAEF,oBAAM,CAACE,GAAD,CAAN;AAAa,aAA1F,EAFwC,CAIxC;;;AACA,kBAAI,CAACC,uBAAL,CAA6BV,YAA7B,EAA2CjB,IAA3C,CAAgD,YAAM;AAAEC,oBAAM;AAAI,aAAlE,WAA0E,UAAAyB,GAAG,EAAI;AAAEF,oBAAM,CAACE,GAAD,CAAN;AAAa,aAAhG,EALwC,CAOxC;AACA;;AACH,WATM,CAAP;AAUH;AA1H8B;AAAA;AAAA,uDA6HQT,YA7HR,EA6HoB;AAAA;;AAC/C,iBAAO,IAAIM,OAAJ,CAAY,YAAM;AACrB,kBAAI,CAAC1C,gBAAL,CAAsB+C,8BAAtB,CAAqDX,YAArD,EACKjB,IADL,CACU,UAAA6B,oBAAoB,EAAI;AAC1B,oBAAI,CAAChC,WAAL,CAAiBqB,GAAjB,CAAqB,UAAAd,CAAC,EAAI;AACtBA,iBAAC,CAACF,QAAF,GAAa2B,oBAAoB,CAACC,IAArB,CAA0B,UAAAC,CAAC,EAAI;AAAEA,mBAAC,CAACZ,SAAF,IAAef,CAAC,CAACe,SAAjB;AAA4B,iBAA7D,CAAb;AACH,eAFD;;AAGA,oBAAI,CAAClC,YAAL,CAAkBkB,UAAlB;AAEH,aAPL,WAOa,UAAAC,CAAC,EAAI;AACV,wFAAaC,OAAb,CAAqBD,CAArB,EAAwB,MAAI,CAACtB,SAA7B;;AACA,oBAAI,CAACG,YAAL,CAAkBkB,UAAlB;AACH,aAVL;AAWH,WAZM,CAAP;AAaH;AA3I8B;AAAA;AAAA,gDA6ICc,YA7ID,EA6Ia;AAAA;;AACxC,iBAAO,IAAIM,OAAJ,CAAY,UAACtB,MAAD,EAASuB,MAAT,EAAoB;AACnC,kBAAI,CAACxC,cAAL,CAAoBgD,oBAApB,CAAyCf,YAAzC,EACKjB,IADL,CACU,UAAAiC,cAAc,EAAI;AACpB,oBAAI,CAACpC,WAAL,CAAiBqB,GAAjB,CAAqB,UAAAd,CAAC,EAAI;AACtBA,iBAAC,CAAC8B,IAAF,GAASD,cAAc,CAACH,IAAf,CAAoB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACI,IAAF,CAAOhB,SAAP,IAAoBf,CAAC,CAACe,SAA1B;AAAA,iBAArB,EAA0DgB,IAA1D,CAA+DD,IAAxE;AACA9B,iBAAC,CAACgC,KAAF,GAAUH,cAAc,CAACH,IAAf,CAAoB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACI,IAAF,CAAOhB,SAAP,IAAoBf,CAAC,CAACe,SAA1B;AAAA,iBAArB,EAA0DgB,IAA1D,CAA+DC,KAAzE;AACH,eAHD;;AAKA,oBAAI,CAACC,UAAL,CAAgBC,aAAhB,CAA8B,CAA9B,EAAiC,GAAjC,EAAsC,GAAtC;;AACArC,oBAAM;AACT,aATL,WASa,UAAAG,CAAC,EAAI;AAEV,wFAAaC,OAAb,CAAqBD,CAArB,EAAwB,MAAI,CAACtB,SAA7B;;AACA,oBAAI,CAACG,YAAL,CAAkBkB,UAAlB;AACH,aAbL;AAcH,WAfM,CAAP;AAgBH;AA9J8B;AAAA;AAAA,2CAgKJiB,WAhKI,EAgKO;AAAA;;AAClC,iBAAO,IAAIG,OAAJ,CAAY,UAACtB,MAAD,EAASuB,MAAT,EAAoB;AAEnC,kBAAI,CAACzC,aAAL,CAAmBwD,kBAAnB,CAAsCnB,WAAtC,EACKpB,IADL,CACU,UAAAwC,YAAY,EAAI;AAClB,oBAAI,CAAC3C,WAAL,CAAiBqB,GAAjB,CAAqB,UAAAd,CAAC,EAAI;AACtBA,iBAAC,CAACqC,UAAF,GAAeD,YAAY,CAACV,IAAb,CAAkB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACI,IAAF,CAAOO,EAAP,IAAatC,CAAC,CAACiB,OAAF,CAAU,CAAV,EAAaP,QAA9B;AAAA,iBAAnB,EAA2DqB,IAA3D,CAAgEM,UAA/E;AACArC,iBAAC,CAACuC,SAAF,GAAcvC,CAAC,CAACiB,OAAF,CAAU,CAAV,EAAasB,SAA3B;AACH,eAHD;;AAIA1C,oBAAM;AACT,aAPL,WAOa,UAAAG,CAAC,EAAI;AACVoB,oBAAM,CAACpB,CAAD,CAAN;AACA,wFAAaC,OAAb,CAAqBD,CAArB,EAAwB,MAAI,CAACtB,SAA7B;;AACA,oBAAI,CAACG,YAAL,CAAkBkB,UAAlB;AACH,aAXL;AAYH,WAdM,CAAP;AAeH;AAhL8B;AAAA;AAAA,iCAkLfgB,SAlLe,EAkLJ;AACvB,eAAKhC,MAAL,CAAYyD,QAAZ,CAAqB,CAAC,uBAAD,CAArB,EAAgD;AAAEC,uBAAW,EAAE;AAAE1B,uBAAS,EAAEA;AAAb;AAAf,WAAhD;AACH;AApL8B;AAAA;AAAA,6CAsLH;AAAA;;AACxB,cAAM2B,KAAK,GAAG,KAAK1D,SAAL,CAAe2D,MAAf,CAAsB;AAChC1E,qBAAS,EAAE,8FADqB;AAEhC2E,0BAAc,EAAE;AAAE9C,sBAAQ,EAAE,KAAKA;AAAjB,aAFgB;AAGhC+C,2BAAe,EAAE;AAHe,WAAtB,EAIXjD,IAJW,CAIN,UAAC8C,KAAD,EAAW;AACfA,iBAAK,CAACI,OAAN;AACAJ,iBAAK,CAACK,aAAN,GAAsBnD,IAAtB,CAA2B,UAAAoD,WAAW,EAAI;AAEtC,kBAAIA,WAAJ,EAAiB;AACb,sBAAI,CAAC1D,UAAL,CAAgBY,KAAhB,CAAsB+C,WAAtB,GAAoCD,WAAW,CAACjB,IAAZ,CAAiBkB,WAArD;AACA,sBAAI,CAAC3D,UAAL,CAAgBY,KAAhB,CAAsBgD,SAAtB,GAAkCF,WAAW,CAACjB,IAAZ,CAAiBmB,SAAnD;AACH;AACJ,aAND;AAOH,WAba,CAAd;AAcH;AArM8B;AAAA;AAAA,uCAuMT;AAAA;;AAClB,cAAMR,KAAK,GAAG,KAAK1D,SAAL,CAAe2D,MAAf,CAAsB;AAChC1E,qBAAS,EAAE,uEADqB;AAEhC4E,2BAAe,EAAE;AAFe,WAAtB,EAGXjD,IAHW,CAGN,UAAC8C,KAAD,EAAW;AACfA,iBAAK,CAACI,OAAN;AACAJ,iBAAK,CAACK,aAAN,GAAsBnD,IAAtB,CAA2B,UAAAoD,WAAW,EAAI;AACtC,kBAAIA,WAAJ,EAAiB;AACb,sBAAI,CAAC1D,UAAL,CAAgBY,KAAhB,CAAsBiD,EAAtB,GAA2BH,WAAW,CAACjB,IAAvC;AACA,sBAAI,CAACzC,UAAL,CAAgBY,KAAhB,CAAsBkD,MAAtB,GAA+B,IAA/B;AACA,sBAAI,CAAC9D,UAAL,CAAgBY,KAAhB,CAAsBmD,MAAtB,GAA+B,IAA/B;AACA,sBAAI,CAAC/D,UAAL,CAAgBY,KAAhB,CAAsBmC,UAAtB,GAAmC,IAAnC;AACA,sBAAI,CAAC/C,UAAL,CAAgBY,KAAhB,CAAsBQ,QAAtB,GAAiC,IAAjC;AACH;AACJ,aARD;AASH,WAda,CAAd;AAeH;AAvN8B;AAAA;AAAA,2CAyNL;AAAA;;AACtB,cAAMgC,KAAK,GAAG,KAAK1D,SAAL,CAAe2D,MAAf,CAAsB;AAChC1E,qBAAS,EAAE,uFADqB;AAEhC2E,0BAAc,EAAE;AAAEO,gBAAE,EAAE,KAAK7D,UAAL,CAAgBY,KAAhB,CAAsBiD;AAA5B,aAFgB;AAGhCN,2BAAe,EAAE;AAHe,WAAtB,EAIXjD,IAJW,CAIN,UAAC8C,KAAD,EAAW;AACfA,iBAAK,CAACI,OAAN;AACAJ,iBAAK,CAACK,aAAN,GAAsBnD,IAAtB,CAA2B,UAAAoD,WAAW,EAAI;AACtC,kBAAIA,WAAJ,EAAiB;AACb,uBAAI,CAAC1D,UAAL,CAAgBY,KAAhB,CAAsBkD,MAAtB,GAA+BJ,WAAW,CAACjB,IAA3C;AACA,uBAAI,CAACzC,UAAL,CAAgBY,KAAhB,CAAsBmD,MAAtB,GAA+B,IAA/B;AACA,uBAAI,CAAC/D,UAAL,CAAgBY,KAAhB,CAAsBmC,UAAtB,GAAmC,IAAnC;AACA,uBAAI,CAAC/C,UAAL,CAAgBY,KAAhB,CAAsBQ,QAAtB,GAAiC,IAAjC;AACH;AACJ,aAPD;AAQH,WAda,CAAd;AAeH;AAzO8B;AAAA;AAAA,2CA2OL;AAAA;;AACtB,cAAMgC,KAAK,GAAG,KAAK1D,SAAL,CAAe2D,MAAf,CAAsB;AAChC1E,qBAAS,EAAE,uFADqB;AAEhC2E,0BAAc,EAAE;AAAEO,gBAAE,EAAE,KAAK7D,UAAL,CAAgBY,KAAhB,CAAsBiD,EAA5B;AAAgCC,oBAAM,EAAE,KAAK9D,UAAL,CAAgBY,KAAhB,CAAsBkD;AAA9D,aAFgB;AAGhCP,2BAAe,EAAE;AAHe,WAAtB,EAIXjD,IAJW,CAIN,UAAC8C,KAAD,EAAW;AACfA,iBAAK,CAACI,OAAN;AACAJ,iBAAK,CAACK,aAAN,GAAsBnD,IAAtB,CAA2B,UAAAoD,WAAW,EAAI;AACtC,kBAAIA,WAAJ,EAAiB;AACb,uBAAI,CAAC1D,UAAL,CAAgBY,KAAhB,CAAsBmD,MAAtB,GAA+BL,WAAW,CAACjB,IAA3C;AACA,uBAAI,CAACzC,UAAL,CAAgBY,KAAhB,CAAsBmC,UAAtB,GAAmC,IAAnC;AACA,uBAAI,CAAC/C,UAAL,CAAgBY,KAAhB,CAAsBQ,QAAtB,GAAiC,IAAjC;AACH;AACJ,aAND;AAOH,WAba,CAAd;AAcH;AA1P8B;AAAA;AAAA,2CA2PL;AAAA;;AACtB,cAAMgC,KAAK,GAAG,KAAK1D,SAAL,CAAe2D,MAAf,CAAsB;AAChC1E,qBAAS,EAAE,uFADqB;AAEhC2E,0BAAc,EAAE;AACZO,gBAAE,EAAE,KAAK7D,UAAL,CAAgBY,KAAhB,CAAsBiD,EADd;AAEZC,oBAAM,EAAE,KAAK9D,UAAL,CAAgBY,KAAhB,CAAsBkD,MAFlB;AAGZC,oBAAM,EAAE,KAAK/D,UAAL,CAAgBY,KAAhB,CAAsBmD;AAHlB,aAFgB;AAOhCR,2BAAe,EAAE;AAPe,WAAtB,EAQXjD,IARW,CAQN,UAAC8C,KAAD,EAAW;AACfA,iBAAK,CAACI,OAAN;AACAJ,iBAAK,CAACK,aAAN,GAAsBnD,IAAtB,CAA2B,UAAAoD,WAAW,EAAI;AACtC,kBAAIA,WAAJ,EAAiB;AACb,uBAAI,CAAC1D,UAAL,CAAgBY,KAAhB,CAAsBmC,UAAtB,GAAmCW,WAAW,CAACjB,IAAZ,CAAiBM,UAApD;AACA,uBAAI,CAAC/C,UAAL,CAAgBY,KAAhB,CAAsBQ,QAAtB,GAAiCsC,WAAW,CAACjB,IAAZ,CAAiBO,EAAlD;AACH;AACJ,aALD;AAMH,WAhBa,CAAd;AAiBH;AA7Q8B;AAAA;AAAA,2CA8QR;AACnB,iBAAO,KAAKhD,UAAL,CAAgBY,KAAhB,CAAsBiD,EAAtB,IAA4B,KAAK7D,UAAL,CAAgBY,KAAhB,CAAsBkD,MAAzD;AACH;AAhR8B;AAAA;AAAA,sCAkRVE,QAlRU,EAkRK;AAAA;;AAChC,eAAKrE,UAAL,CAAgBA,UAAhB,CAA2BqE,QAA3B,EAAqC,IAArC,EAA2C1D,IAA3C,CAAgD,YAAM,CAGrD,CAHD,WAGS,UAAAI,CAAC,EAAI;AACV,sFAAaC,OAAb,CAAqBD,CAArB,EAAwB,OAAI,CAACtB,SAA7B;AACH,WALD;AAMH;AAzR8B;AAAA;AAAA,mDA0RGqC,SA1RH,EA0RmB;AAC9C,eAAK7B,eAAL,CAAqBqE,yBAArB,CAA+CxC,SAA/C,EAA0D,uDAAOyC,iBAAP,GAA2BC,eAA3B,GAA6C1C,SAAvG,EACCnB,IADD,CACM,YAAI,CAAE,CADZ;AAEH;AA7R8B;AAAA;AAAA,gDA+RAmB,SA/RA,EA+RgB;AAC3C,eAAK7B,eAAL,CAAqBwE,uBAArB,CAA6C3C,SAA7C,EAAwD,uDAAOyC,iBAAP,GAA2BC,eAA3B,GAA6C1C,SAArG,EACCnB,IADD,CACM,YAAI,CAAE,CADZ;AAEH;AAlS8B;;AAAA;AAAA,OAAnC;;;;cAgByC;;cACf;;cACI;;cACC;;cACF;;cACS;;cACf;;cACG;;cACE;;cACK;;;;AAxBN,8DAAtB,gEAAU,yDAAV,CAAsB,G,gCAAA,E,YAAA,E,MAAA;AADdpB,0BAAsB,6DALlC,gEAAU;AACPmF,cAAQ,EAAE,yBADH;AAEPC,cAAQ,EAAR;AAAA;AAAA,sIAFO;;;;AAAA,KAAV,CAKkC,GAAtBpF,sBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBb,QAAaqF,eAAe;AAS1B,+BAAoBC,kBAApB,EAA4D;AAAA;;AAAxC,aAAAA,kBAAA,GAAAA,kBAAA;AAIlB;;AAbwB;AAAA;AAAA,kDACAC,kBADA,EAC4BhD,SAD5B,EAC0C;AACjE,iBAAQ,KAAK+C,kBAAL,CAAwBP,yBAAxB,CAAkDQ,kBAAlD,EAAqEhD,SAArE,CAAR;AACF;AAHyB;AAAA;AAAA,gDAKFgD,kBALE,EAK0BhD,SAL1B,EAKwC;AAChE,iBAAQ,KAAK+C,kBAAL,CAAwBJ,uBAAxB,CAAgDK,kBAAhD,EAAmEhD,SAAnE,CAAR;AAED;AARyB;;AAAA;AAAA,OAA5B;;;;cAS0C;;;;AAT7B8C,mBAAe,6DAH3B,iEAAW;AACVG,gBAAU,EAAE;AADF,KAAX,CAG2B,GAAfH,eAAe,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb,QAAaI,kBAAkB;AAAA;;AAAA;;AAAA;AAAA;AAAA,kDACHF,kBADG,EACyBhD,SADzB,EACuC;AAAA;;AAClE,cAAImD,GAAG,GAAG,KAAKC,EAAL,CAAQC,UAAR,CAAmB,UAAnB,EAA+BC,GAA/B,CAAmCtD,SAAnC,CAAV;AACA,cAAIuD,GAAG,GAAG,CAAC;AAACP,8BAAkB,EAAGA,kBAAtB;AAA0ChD,qBAAS,EAACA;AAApD,WAAD,CAAV;AAEA,iBAAO,IAAII,OAAJ,CAAiB,UAACoD,OAAD,EAAUnD,MAAV,EAAqB;AAC7C,mBAAI,CAAC+C,EAAL,CAAQK,cAAR,CAAuB,UAAAC,WAAW,EAAI;AAClC;AACA,qBAAOA,WAAW,CAACC,GAAZ,CAAgBR,GAAhB,EAAqBtE,IAArB,CAA0B,UAAAyE,GAAG,EAAI;AAEpC,oBAAIM,QAAQ,GAAGN,GAAG,CAACtC,IAAJ,EAAf;;AACA,oBAAI,CAAC4C,QAAQ,CAAClF,WAAd,EAA2B;AACzBkF,0BAAQ,CAAClF,WAAT,GAAuB,CAAC6E,GAAD,CAAvB;AACEG,6BAAW,CAACG,GAAZ,CAAgBV,GAAhB,EAAqBS,QAArB;AACH,iBAHD,MAGO;AACHA,0BAAQ,CAAClF,WAAT,GAAuBkF,QAAQ,CAAClF,WAAT,CAAqBoF,MAArB,CAA4B,UAAAlD,CAAC,EAAI;AAAE,2BAAOA,CAAC,CAACoC,kBAAF,IAAwBA,kBAA/B;AAAmD,mBAAtF,CAAvB;AACAY,0BAAQ,CAAClF,WAAT,CAAqBqF,IAArB,CAA0BR,GAA1B;AACAG,6BAAW,CAACM,MAAZ,CAAmBb,GAAnB,EAAwBS,QAAxB;AACH;AACJ,eAXM,CAAP;AAYH,aAdD,EAcG/E,IAdH,CAcQ,YAAY;AAChB2E,qBAAO;AACV,aAhBD,WAgBS,UAAUS,KAAV,EAAiB;AACtB5D,oBAAM,CAAC4D,KAAD,CAAN;AACH,aAlBD;AAmBH,WApBU,CAAP;AAqBH;AA1B8B;AAAA;AAAA,gDA4BPjB,kBA5BO,EA4BqBhD,SA5BrB,EA4BmC;AAAA;;AAChE,cAAImD,GAAG,GAAG,KAAKC,EAAL,CAAQC,UAAR,CAAmB,UAAnB,EAA+BC,GAA/B,CAAmCtD,SAAnC,CAAV;AACA,cAAIuD,GAAG,GAAG,CAAC;AAACP,8BAAkB,EAAGA,kBAAtB;AAA0ChD,qBAAS,EAACA;AAApD,WAAD,CAAV;AAEA,iBAAO,IAAII,OAAJ,CAAiB,UAACoD,OAAD,EAAUnD,MAAV,EAAqB;AACzC,mBAAI,CAAC+C,EAAL,CAAQK,cAAR,CAAuB,UAAAC,WAAW,EAAI;AAClC;AACA,qBAAOA,WAAW,CAACC,GAAZ,CAAgBR,GAAhB,EAAqBtE,IAArB,CAA0B,UAAAyE,GAAG,EAAI;AACpC,oBAAI5E,WAAW,GAAG,EAAlB;AACAA,2BAAW,GAAG4E,GAAG,CAACtC,IAAJ,GAAWtC,WAAzB;AACAA,2BAAW,GAAGA,WAAW,CAACoF,MAAZ,CAAmB,UAAAlD,CAAC,EAAI;AAAE,yBAAOA,CAAC,CAACoC,kBAAF,IAAwBA,kBAA/B;AAAmD,iBAA7E,CAAd;AACAU,2BAAW,CAACM,MAAZ,CAAmBb,GAAnB,EAAwB;AAAEzE,6BAAW,EAAEA;AAAf,iBAAxB;AACH,eALM,CAAP;AAMH,aARD,EAQGG,IARH,CAQQ,YAAY;AAChB2E,qBAAO;AACV,aAVD,WAUS,UAAUS,KAAV,EAAiB;AACtB5D,oBAAM,CAAC4D,KAAD,CAAN;AACH,aAZD;AAaH,WAdM,CAAP;AAeD;AA/C8B;;AAiD7B,oCAAc;AAAA;;AAAA;AAAY;;AAjDG;AAAA,MAAS,oFAAT,CAA/B;;AAAaf,sBAAkB,6DAH9B,iEAAW;AACVD,gBAAU,EAAE;AADF,KAAX,CAG8B,GAAlBC,kBAAkB,CAAlB","file":"pages-prestador-prestador-consultar-prestador-consultar-module-es5.js","sourcesContent":["export default \"<ion-header class=\\\"ion-no-border\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Consultar Prestador\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n\\n  <ion-card>\\n    <ion-card-content>\\n      <form [formGroup]=\\\"formulario\\\" (ngSubmit)=\\\"ConsultarPrestador()\\\">\\n        <ion-item (click)=\\\"abrirModalServicos()\\\" detail>\\n          <ion-label>Serviço</ion-label>\\n          <ion-note color=\\\"primary\\\" slot=\\\"end\\\">{{formulario.value.nomeServico}}</ion-note>\\n          <ion-note color=\\\"primary\\\" slot=\\\"end\\\" *ngIf=\\\"!formulario.value.nomeServico\\\">Todos</ion-note>\\n        </ion-item>\\n\\n        <ion-item (click)=\\\"abrirModalUF()\\\" detail>\\n          <ion-label>UF<ion-text color=\\\"danger\\\">*</ion-text>\\n\\n          </ion-label>\\n          <ion-note slot=\\\"end\\\" color=\\\"primary\\\"> {{formulario.value.uf}}</ion-note>\\n\\n        </ion-item>\\n        <app-mensagem-validacao [validation_messages_object]=\\\"validation_messages.uf\\\" [form]=\\\"formulario\\\"\\n          [nomeCampo]=\\\"'uf'\\\"></app-mensagem-validacao>\\n\\n        <ion-item (click)=\\\"abrirModalCidade()\\\" detail [disabled]=\\\"!formulario.value.uf\\\">\\n          <ion-label>Cidade<ion-text color=\\\"danger\\\">*</ion-text>\\n\\n          </ion-label>\\n          <ion-note slot=\\\"end\\\" color=\\\"primary\\\"> {{formulario.value.cidade}}</ion-note>\\n\\n        </ion-item>\\n        <app-mensagem-validacao [validation_messages_object]=\\\"validation_messages.cidade\\\" [form]=\\\"formulario\\\"\\n          [nomeCampo]=\\\"'cidade'\\\"></app-mensagem-validacao>\\n\\n        <ion-item (click)=\\\"abrirModalBairro()\\\" detail [disabled]=\\\"!formulario.value.cidade\\\">\\n          <ion-label>Bairro\\n\\n          </ion-label>\\n          <ion-note slot=\\\"end\\\" color=\\\"primary\\\"> {{formulario.value.bairro}}</ion-note>\\n\\n        </ion-item>\\n        <ion-item (click)=\\\"abrirModalIgreja()\\\" detail [disabled]=\\\"!formulario.value.cidade\\\">\\n          <ion-label>Igreja\\n\\n          </ion-label>\\n          <ion-note slot=\\\"end\\\" color=\\\"primary\\\"> {{formulario.value.nomeIgreja}}</ion-note>\\n\\n        </ion-item>\\n\\n        <ion-button class=\\\"primary\\\" type=\\\"submit\\\" expand=\\\"block\\\">Pesquisar</ion-button>\\n\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card *ngFor=\\\"let item of prestadores\\\" value=\\\"{{item}}\\\" class=\\\"ion-no-border\\\">\\n  <ion-card-header>\\n\\n      <ion-card-title><h3>{{item.nome}} </h3>\\n        \\n     \\n        </ion-card-title>\\n    </ion-card-header> \\n\\n      <ion-item (click)=\\\"ligarTelefone(item.telefone)\\\"  >\\n                <ion-icon name=\\\"call-outline\\\" slot=\\\"start\\\"></ion-icon>\\n        <ion-label color=\\\"primary\\\" class=\\\"ion-no-border\\\">\\n          <h2>{{item.telefone}}</h2>\\n        </ion-label>\\n      </ion-item>\\n      <ion-item  class=\\\"ion-no-border\\\">\\n        <ion-icon name=\\\"business-outline\\\" slot=\\\"start\\\"></ion-icon>\\n        <ion-label class=\\\"ion-text-wrap on-no-border\\\">\\n          <h2>{{item.nomeIgreja}} </h2>\\n        </ion-label>\\n        <ion-note color=\\\"tertiary\\\" slot=\\\"end\\\" *ngIf=\\\"item.staMembro\\\">\\n         membro \\n        </ion-note>\\n      </ion-item>\\n      <ion-item>\\n        <ion-icon name=\\\"golf-outline\\\" slot=\\\"start\\\"></ion-icon>\\n        <ion-label class=\\\"ion-text-wrap on-no-border\\\">\\n          <h2>{{item.bairro}} - {{item.cidade}} / {{item.uf}}</h2>\\n        </ion-label>\\n      </ion-item>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"4\\\">\\n            <ion-button size=\\\"small\\\" (click)=\\\"detalhes(item.usuarioId)\\\">Detalhes</ion-button>\\n          </ion-col>\\n          <!-- <ion-col size=\\\"4\\\">\\n            <ion-button size=\\\"small\\\" (click)=\\\"compartilhar()\\\" >\\n              <ion-icon name=\\\"share-social\\\"></ion-icon></ion-button>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\">\\n\\n            <ion-button size=\\\"small\\\" (click)=\\\"adicionarFavorito(item.usuarioId)\\\" fill=\\\"outline\\\">\\n              <ion-icon name=\\\"star-outline\\\"></ion-icon></ion-button>\\n          </ion-col> -->\\n        </ion-row>\\n      </ion-grid>\\n    <!-- </ion-card-content> -->\\n  </ion-card>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PrestadorConsultarPage } from './prestador-consultar.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PrestadorConsultarPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PrestadorConsultarPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PrestadorConsultarPageRoutingModule } from './prestador-consultar-routing.module';\n\nimport { PrestadorConsultarPage } from './prestador-consultar.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ComponentsModule,\n    IonicModule,\n    PrestadorConsultarPageRoutingModule\n  ],\n  declarations: [PrestadorConsultarPage]\n})\nexport class PrestadorConsultarPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3ByZXN0YWRvci9wcmVzdGFkb3ItY29uc3VsdGFyL3ByZXN0YWRvci1jb25zdWx0YXIucGFnZS5zY3NzIn0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { PrestadorService } from 'src/app/providers/prestador/prestador.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HandlerError } from 'src/app/helpers/handlerError';\nimport { ToastController, LoadingController, ModalController, IonContent } from '@ionic/angular';\nimport { IgrejaService } from 'src/app/providers/igreja/igreja.service';\nimport { UsuarioService } from 'src/app/providers/usuario/usuario.service';\nimport { LoadingContr } from 'src/app/helpers/loadingContr';\nimport { DominioServicoService } from 'src/app/providers/dominioServico/dominio-servico.service';\nimport { Router } from '@angular/router';\nimport { ToastCustom } from 'src/app/helpers/toastCustom';\nimport { ModalServicosPage } from '../../servico/modal-servicos/modal-servicos.page';\nimport { ModalBairroPage } from '../../bairro/modal-bairro/modal-bairro.page';\nimport { ModalCidadePage } from '../../cidade/modal-cidade/modal-cidade.page';\nimport { ModalUFPage } from '../../UF/modal-uf/modal-uf.page';\nimport { ModalIgrejaPage } from '../../igreja/modal-igreja/modal-igreja.page';\nimport { CallNumber } from '@ionic-native/call-number/ngx';\nimport { Constants } from 'src/app/utils/constants';\nimport { FavoritoService } from 'src/app/providers/favorito/favorito.service';\nimport { Config } from 'src/app/config';\n@Component({\n    selector: 'app-prestador-consultar',\n    templateUrl: './prestador-consultar.page.html',\n    styleUrls: ['./prestador-consultar.page.scss'],\n})\nexport class PrestadorConsultarPage implements OnInit {\n    @ViewChild(IonContent) ionContent: IonContent;\n    UfList: any[];\n    cidadeList: any[];\n    servicos: any[];\n    formulario: FormGroup;\n    prestadores: any[];\n    validation_messages = {\n        'uf': [\n            { type: 'required', message: 'Campo de preenchimento obrigatório.' }\n        ],\n        'servicoId': [\n            { type: 'required', message: 'Campo de preenchimento obrigatório.' }\n        ]\n    };\n\n    constructor(public prestadorService: PrestadorService,\n        public toastCtrl: ToastController,\n        public igrejaService: IgrejaService,\n        public usuarioService: UsuarioService,\n        public loadingContr: LoadingContr,\n        public dominioServicoService: DominioServicoService,\n        public router: Router,\n        public modalCtrl: ModalController,\n        private callNumber: CallNumber,\n        private favoritoService: FavoritoService\n    ) {\n\n        this.formulario = new FormGroup({\n            'uf': new FormControl('', Validators.compose([\n                Validators.required\n            ])),\n            'cidade': new FormControl(),\n            'bairro': new FormControl(),\n            'nomeServico': new FormControl(),\n            'nomeIgreja': new FormControl(),\n            'igrejaId': new FormControl(),\n        });\n        this.prestadores = [];\n    }\n\n    ngOnInit() {\n        this.loadingContr.showLoader();\n\n        this.dominioServicoService.recuperaDominioServico()\n            .then(result => {\n                this.servicos = result;\n                this.loadingContr.hideLoader();\n\n            }).catch(x => {\n                this.loadingContr.hideLoader();\n                HandlerError.handler(x, this.toastCtrl);\n            });\n    }\n\n    buscarCidades() {\n        this.loadingContr.showLoader();\n        this.formulario.value['cidade'] = \"\";\n        this.prestadorService.RecuperaCidadePrestadorDisponiveis(this.formulario.value['uf'])\n            .then(result => {\n                this.cidadeList = result;\n                this.loadingContr.hideLoader();\n            }).catch(x => {\n                this.loadingContr.hideLoader();\n                HandlerError.handler(x, this.toastCtrl);\n            });\n    }\n\n    ConsultarPrestador() {\n        if (!this.formularioValido()) {\n            ToastCustom.CustomToast(this.toastCtrl, Constants.Mensagens.CamposObrigatorios, \"danger\", 4000);\n\n            return false;\n        }\n        this.prestadores = [];\n        this.loadingContr.showLoader();\n\n        this.prestadorService\n            .RecuperaPestadoresPesquisar(\n                this.formulario.value['uf']\n                , this.formulario.value['cidade']\n                , this.formulario.value['bairro']\n                , this.formulario.value['servicoId']\n                , this.formulario.value.igrejaId)\n            .then(prestadoresResult => {\n                if (!prestadoresResult || prestadoresResult.length == 0) {\n                    ToastCustom.CustomToast(this.toastCtrl, \"Nenhum prestador encontrado.\", \"danger\", 4000);\n                    this.loadingContr.hideLoader();\n                    return false;\n                }\n                let lstusuarioId = [];\n                lstusuarioId = prestadoresResult.map(x => { return x.usuarioId });\n                this.prestadores = prestadoresResult;\n\n                let lstIgrejaId = [];\n                lstIgrejaId = prestadoresResult.map(x => { return x.igrejas[0].igrejaId });\n\n                this.consultaMasterPrestador(lstusuarioId, lstIgrejaId).then(() => {\n                    this.loadingContr.hideLoader();\n\n                }).catch(x => {\n                    HandlerError.handler(x, this.toastCtrl);\n                    this.loadingContr.hideLoader();\n                });\n\n            }).catch(x => {\n                HandlerError.handler(x, this.toastCtrl);\n                this.loadingContr.hideLoader();\n            });\n    }\n\n    private consultaMasterPrestador(lstusuarioId, lstIgrejaId): Promise<any> {\n        return new Promise<any>((result, reject) => {\n            // Recupera igreja \n            this.recuperaNomeIgreja(lstIgrejaId).then(() => { result() }).catch(err => { reject(err) });\n\n            // Recupera Nome \n            this.recuperaNomePrestadores(lstusuarioId).then(() => { result() }).catch(err => { reject(err) });\n\n            // Recupera Servicos\n            //this.recuperaServicosPorPrestadores(lstusuarioId);\n        });\n    }\n\n\n    private recuperaServicosPorPrestadores(lstusuarioId): Promise<any> {\n        return new Promise(() => {\n            this.prestadorService.recuperaServicosPorPrestadores(lstusuarioId)\n                .then(servicosPorPrestador => {\n                    this.prestadores.map(x => {\n                        x.servicos = servicosPorPrestador.find(y => { y.usuarioId == x.usuarioId });\n                    })\n                    this.loadingContr.hideLoader();\n\n                }).catch(x => {\n                    HandlerError.handler(x, this.toastCtrl);\n                    this.loadingContr.hideLoader();\n                });\n        });\n    }\n\n    private recuperaNomePrestadores(lstusuarioId): Promise<any> {\n        return new Promise((result, reject) => {\n            this.usuarioService.RecuperaNomeUsuarios(lstusuarioId)\n                .then(usuariosResult => {\n                    this.prestadores.map(x => {\n                        x.nome = usuariosResult.find(y => y.data.usuarioId == x.usuarioId).data.nome;\n                        x.email = usuariosResult.find(y => y.data.usuarioId == x.usuarioId).data.email;\n                    });\n                  \n                    this.ionContent.scrollToPoint(0, 350, 800);\n                    result();\n                }).catch(x => {\n                  \n                    HandlerError.handler(x, this.toastCtrl);\n                    this.loadingContr.hideLoader();\n                });\n        });\n    }\n\n    private recuperaNomeIgreja(lstIgrejaId): Promise<any> {\n        return new Promise((result, reject) => {\n\n            this.igrejaService.RecuperaNomeIgreja(lstIgrejaId)\n                .then(resultIgreja => {\n                    this.prestadores.map(x => {\n                        x.nomeIgreja = resultIgreja.find(y => y.data.id == x.igrejas[0].igrejaId).data.nomeIgreja;\n                        x.staMembro = x.igrejas[0].staMembro;\n                    });\n                    result()\n                }).catch(x => {\n                    reject(x)\n                    HandlerError.handler(x, this.toastCtrl);\n                    this.loadingContr.hideLoader();\n                });\n        });\n    }\n\n    public detalhes(usuarioId) {\n        this.router.navigate(['/visualizar-prestador'], { queryParams: { usuarioId: usuarioId } });\n    }\n\n    public abrirModalServicos() {\n        const modal = this.modalCtrl.create({\n            component: ModalServicosPage,\n            componentProps: { servicos: this.servicos },\n            backdropDismiss: false,\n        }).then((modal) => {\n            modal.present();\n            modal.onWillDismiss().then(resultModal => {\n\n                if (resultModal) {\n                    this.formulario.value.nomeServico = resultModal.data.nomeServico;\n                    this.formulario.value.servicoId = resultModal.data.servicoId;\n                }\n            });\n        });\n    }\n\n    public abrirModalUF() {\n        const modal = this.modalCtrl.create({\n            component: ModalUFPage,\n            backdropDismiss: false,\n        }).then((modal) => {\n            modal.present();\n            modal.onWillDismiss().then(resultModal => {\n                if (resultModal) {\n                    this.formulario.value.uf = resultModal.data;\n                    this.formulario.value.cidade = null;\n                    this.formulario.value.bairro = null;\n                    this.formulario.value.nomeIgreja = null;\n                    this.formulario.value.igrejaId = null;\n                }\n            });\n        });\n    }\n\n    public abrirModalCidade() {\n        const modal = this.modalCtrl.create({\n            component: ModalCidadePage,\n            componentProps: { uf: this.formulario.value.uf },\n            backdropDismiss: false,\n        }).then((modal) => {\n            modal.present();\n            modal.onWillDismiss().then(resultModal => {\n                if (resultModal) {\n                    this.formulario.value.cidade = resultModal.data;\n                    this.formulario.value.bairro = null;\n                    this.formulario.value.nomeIgreja = null;\n                    this.formulario.value.igrejaId = null;\n                }\n            });\n        });\n    }\n\n    public abrirModalBairro() {\n        const modal = this.modalCtrl.create({\n            component: ModalBairroPage,\n            componentProps: { uf: this.formulario.value.uf, cidade: this.formulario.value.cidade },\n            backdropDismiss: false,\n        }).then((modal) => {\n            modal.present();\n            modal.onWillDismiss().then(resultModal => {\n                if (resultModal) {\n                    this.formulario.value.bairro = resultModal.data;\n                    this.formulario.value.nomeIgreja = null;\n                    this.formulario.value.igrejaId = null;\n                }\n            });\n        });\n    }\n    public abrirModalIgreja() {\n        const modal = this.modalCtrl.create({\n            component: ModalIgrejaPage,\n            componentProps: {\n                uf: this.formulario.value.uf,\n                cidade: this.formulario.value.cidade,\n                bairro: this.formulario.value.bairro\n            },\n            backdropDismiss: false,\n        }).then((modal) => {\n            modal.present();\n            modal.onWillDismiss().then(resultModal => {\n                if (resultModal) {\n                    this.formulario.value.nomeIgreja = resultModal.data.nomeIgreja;\n                    this.formulario.value.igrejaId = resultModal.data.id;\n                }\n            });\n        });\n    }\n    public formularioValido(): boolean {\n        return this.formulario.value.uf && this.formulario.value.cidade;\n    }\n\n    public ligarTelefone(telefone: any) {\n        this.callNumber.callNumber(telefone, true).then(() => {\n\n\n        }).catch(x => {\n            HandlerError.handler(x, this.toastCtrl);\n        });\n    }\n    public adicionarPrestadorFavorito(usuarioId:string){\n        this.favoritoService.AdicionaPrestadorFavorito(usuarioId, Config.RecuperaInstancia().recuperaUsuario().usuarioId)\n        .then(()=>{});\n    }\n\n    public removePrestadorFavorito(usuarioId:string){\n        this.favoritoService.RemovePrestadorFavorito(usuarioId, Config.RecuperaInstancia().recuperaUsuario().usuarioId)\n        .then(()=>{});\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { FavoritoRepService } from 'src/app/repository/favorito/favorito-rep.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FavoritoService {\n  AdicionaPrestadorFavorito(prestadorUsuarioId: string, usuarioId: any):Promise<any> {\n     return  this.favoritoRepService.AdicionaPrestadorFavorito(prestadorUsuarioId,usuarioId);\n  }\n\n  RemovePrestadorFavorito(prestadorUsuarioId: string, usuarioId: any):Promise<any> {\n    return  this.favoritoRepService.RemovePrestadorFavorito(prestadorUsuarioId,usuarioId);\n\n  }\n  constructor(private favoritoRepService: FavoritoRepService) {\n\n\n\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseRepository } from '../repository-interface/Repository-Base';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FavoritoRepService extends BaseRepository {\n  AdicionaPrestadorFavorito(prestadorUsuarioId: string, usuarioId: any): Promise<any> {\n    let ref = this.db.collection(\"favorito\").doc(usuarioId)\n    let obj = [{prestadorUsuarioId : prestadorUsuarioId, usuarioId:usuarioId}];\n  \n    return new Promise<any>((retorno, reject) => {\n    this.db.runTransaction(transaction => {\n        // This code may get re-run multiple times if there are conflicts.\n        return transaction.get(ref).then(doc => {\n\n            let favorito = doc.data();\n            if (!favorito.prestadores) {\n              favorito.prestadores = [obj];\n                transaction.set(ref, favorito);\n            } else {\n                favorito.prestadores = favorito.prestadores.filter(y => { return y.prestadorUsuarioId != prestadorUsuarioId });\n                favorito.prestadores.push(obj);\n                transaction.update(ref, favorito);\n            }\n        });\n    }).then(function () {\n        retorno()\n    }).catch(function (error) {\n        reject(error)\n    });\n});\n}\n\nRemovePrestadorFavorito(prestadorUsuarioId: string, usuarioId: any): Promise<any> {\n  let ref = this.db.collection(\"favorito\").doc(usuarioId)\n  let obj = [{prestadorUsuarioId : prestadorUsuarioId, usuarioId:usuarioId}];\n\n  return new Promise<any>((retorno, reject) => {\n      this.db.runTransaction(transaction => {\n          // This code may get re-run multiple times if there are conflicts.\n          return transaction.get(ref).then(doc => {\n              let prestadores = []\n              prestadores = doc.data().prestadores;\n              prestadores = prestadores.filter(y => { return y.prestadorUsuarioId != prestadorUsuarioId });\n              transaction.update(ref, { prestadores: prestadores });\n          });\n      }).then(function () {\n          retorno()\n      }).catch(function (error) {\n          reject(error)\n      });\n  });\n}\n\n  constructor() { super(); }\n}\n"]}
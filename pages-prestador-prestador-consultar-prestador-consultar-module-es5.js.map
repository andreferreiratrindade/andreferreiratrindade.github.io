{"version":3,"sources":["webpack:///src/app/pages/prestador/prestador-consultar/prestador-consultar.page.html","webpack:///src/app/pages/prestador/prestador-consultar/prestador-consultar-routing.module.ts","webpack:///src/app/pages/prestador/prestador-consultar/prestador-consultar.module.ts","webpack:///src/app/pages/prestador/prestador-consultar/prestador-consultar.page.scss","webpack:///src/app/pages/prestador/prestador-consultar/prestador-consultar.page.ts"],"names":["routes","path","component","PrestadorConsultarPageRoutingModule","imports","forChild","exports","PrestadorConsultarPageModule","declarations","PrestadorConsultarPage","prestadorService","toastCtrl","igrejaService","usuarioService","loadingContr","dominioServicoService","router","validation_messages","type","message","formulario","compose","required","prestadores","showLoader","RecuperaUfPrestadorDisponiveis","then","result","UfList","hideLoader","x","handler","recuperaDominioServico","servicos","value","RecuperaCidadePrestadorDisponiveis","cidadeList","RecuperaPestadoresPorCidadeEhUFEhServico","prestadoresResult","CustomToast","lstusuarioId","map","usuarioId","lstIgrejaId","igrejas","igrejaId","consultaMasterPrestador","Promise","reject","recuperaNomeIgreja","recuperaNomePrestadores","recuperaServicosPorPrestadores","servicosPorPrestador","find","y","RecuperaNomeUsuarios","usuariosResult","nome","data","email","RecuperaNomeIgreja","resultIgreja","nomeIgreja","id","navigate","queryParams","selector","template"],"mappings":"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","file":"pages-prestador-prestador-consultar-prestador-consultar-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>\\n      Consultar Prestador\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n  <form [formGroup]=\\\"formulario\\\" (ngSubmit)=\\\"ConsultarPrestador()\\\">\\n    <ion-list lines=\\\"full\\\" class=\\\"ion-no-margin ion-no-padding\\\">\\n      <ion-item>\\n        <ion-label>Servi√ßo <ion-text color=\\\"danger\\\">*</ion-text>\\n        </ion-label>\\n        <ion-select class=\\\"ion-text-end\\\" name=\\\"servicoId\\\" formControlName=\\\"servicoId\\\" interface=\\\"action-sheet\\\">\\n          <ion-select-option *ngFor=\\\"let item of servicos\\\" selected=\\\"selected\\\" value=\\\"{{item.servicoId}}\\\">\\n            {{ item.nomeServico }}\\n          </ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n      <ion-item class=\\\"input-item\\\">\\n        <ion-label>UF <ion-text color=\\\"danger\\\">*</ion-text>\\n        </ion-label>\\n        <ion-select class=\\\"ion-text-end\\\" name=\\\"uf\\\" formControlName=\\\"uf\\\" (ionChange)=\\\"buscarCidades()\\\"\\n          interface=\\\"action-sheet\\\">\\n          <ion-select-option *ngFor=\\\"let item of UfList\\\" value=\\\"{{item}}\\\">\\n            {{ item }}\\n          </ion-select-option>\\n        </ion-select>\\n\\n      </ion-item>\\n      <app-mensagem-validacao [validation_messages_object]=\\\"validation_messages.uf\\\" [form]=\\\"formulario\\\"\\n        [nomeCampo]=\\\"'uf'\\\"></app-mensagem-validacao>\\n\\n      <ion-item>\\n        <ion-label>Cidade</ion-label>\\n        <ion-select class=\\\"ion-text-end\\\" name=\\\"cidade\\\" formControlName=\\\"cidade\\\" [disabled]=\\\"!formulario.value['uf']\\\"\\n          interface=\\\"action-sheet\\\">\\n          <ion-select-option *ngFor=\\\"let item of cidadeList\\\" selected=\\\"selected\\\" value=\\\"{{item}}\\\">\\n            {{ item }}\\n          </ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n      <app-mensagem-validacao [validation_messages_object]=\\\"validation_messages.cidade\\\" [form]=\\\"formulario\\\"\\n        [nomeCampo]=\\\"'cidade'\\\"></app-mensagem-validacao>\\n\\n\\n    </ion-list>\\n    <div class=\\\"error-container\\\" *ngIf=\\\"submitError\\\">\\n      <div class=\\\"error-message\\\">\\n        <ion-icon name=\\\"information-circle-outline\\\"></ion-icon>\\n        <span>{{ submitError }}</span>\\n      </div>\\n    </div>\\n    <ion-button class=\\\"sign-up-btn\\\" type=\\\"submit\\\" expand=\\\"block\\\" [disabled]=\\\"!formulario.valid\\\">Pesquisar</ion-button>\\n  </form>\\n\\n  <ion-card *ngFor=\\\"let item of prestadores\\\" value=\\\"{{item}}\\\">\\n    <ion-card-header>\\n      <ion-card-title>{{item.nome}} </ion-card-title>\\n    </ion-card-header>\\n\\n    <ion-card-content>\\n      <ion-item>\\n        <ion-label>\\n          <h2>{{item.telefone}}</h2>\\n          <h2>{{item.email}}</h2>\\n          <p>{{item.nomeIgreja}}</p>\\n          <p>{{item.cidade}} / {{item.uf}}</p>\\n        </ion-label>\\n      </ion-item>\\n      <ion-row>\\n        <ion-col>\\n          <ion-button  color=\\\"warning\\\" (click)=\\\"detalhes(item.usuarioId)\\\">\\n            <ion-icon name=\\\"eye-outline\\\"></ion-icon>\\n          </ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-card-content>\\n  </ion-card>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { PrestadorConsultarPage } from './prestador-consultar.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PrestadorConsultarPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PrestadorConsultarPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PrestadorConsultarPageRoutingModule } from './prestador-consultar-routing.module';\n\nimport { PrestadorConsultarPage } from './prestador-consultar.page';\nimport { ComponentsModule } from 'src/app/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ComponentsModule,\n    IonicModule,\n    PrestadorConsultarPageRoutingModule\n  ],\n  declarations: [PrestadorConsultarPage]\n})\nexport class PrestadorConsultarPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3ByZXN0YWRvci9wcmVzdGFkb3ItY29uc3VsdGFyL3ByZXN0YWRvci1jb25zdWx0YXIucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { PrestadorService } from 'src/app/providers/prestador/prestador.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { HandlerError } from 'src/app/helpers/handlerError';\nimport { ToastController, LoadingController } from '@ionic/angular';\nimport { IgrejaService } from 'src/app/providers/igreja/igreja.service';\nimport { UsuarioService } from 'src/app/providers/usuario/usuario.service';\nimport { LoadingContr } from 'src/app/helpers/loadingContr';\nimport { DominioServicoService } from 'src/app/providers/dominioServico/dominio-servico.service';\nimport { Router } from '@angular/router';\nimport { ToastCustom } from 'src/app/helpers/toastCustom';\n\n@Component({\n  selector: 'app-prestador-consultar',\n  templateUrl: './prestador-consultar.page.html',\n  styleUrls: ['./prestador-consultar.page.scss'],\n})\nexport class PrestadorConsultarPage implements OnInit {\n\n  UfList: any[];\n  cidadeList: any[];\n  servicos: any[];\n  formulario: FormGroup;\n  prestadores: any[];\n  validation_messages = {\n    'uf': [\n      { type: 'required', message: 'Campo de preenchimento obrigat√≥rio.' }\n    ],\n    'servicoId': [\n      { type: 'required', message: 'Campo de preenchimento obrigat√≥rio.' }\n    ]\n  };\n\n  constructor(public prestadorService: PrestadorService,\n    public toastCtrl: ToastController,\n    public igrejaService: IgrejaService,\n    public usuarioService: UsuarioService,\n    public loadingContr: LoadingContr,\n    public dominioServicoService: DominioServicoService,\n    public router:Router\n  ) {\n\n    this.formulario = new FormGroup({\n      'uf': new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n      'cidade': new FormControl(),\n      'servicoId': new FormControl('', Validators.compose([\n        Validators.required\n      ]))\n    });\n    this.prestadores = [];\n\n  }\n\n  ngOnInit() {\n    this.loadingContr.showLoader();\n\n    this.prestadorService.RecuperaUfPrestadorDisponiveis()\n      .then(result => {\n        this.UfList = result;\n        this.loadingContr.hideLoader();\n\n      }).catch(x => {\n        this.loadingContr.hideLoader();\n        HandlerError.handler(x, this.toastCtrl);\n      });\n\n    this.dominioServicoService.recuperaDominioServico()\n      .then(result => {\n        this.servicos = result;\n        this.loadingContr.hideLoader();\n\n      }).catch(x => {\n        this.loadingContr.hideLoader();\n        HandlerError.handler(x, this.toastCtrl);\n      });\n  }\n\n  buscarCidades() {\n    this.loadingContr.showLoader();\n    this.formulario.value['cidade'] = \"\";\n    this.prestadorService.RecuperaCidadePrestadorDisponiveis(this.formulario.value['uf'])\n      .then(result => {\n        this.cidadeList = result;\n        this.loadingContr.hideLoader();\n      }).catch(x => {\n        this.loadingContr.hideLoader();\n        HandlerError.handler(x, this.toastCtrl);\n      });\n  }\n\n  ConsultarPrestador() {\n    this.loadingContr.showLoader();\n    this.prestadores = [];\n\n    this.prestadorService\n      .RecuperaPestadoresPorCidadeEhUFEhServico(this.formulario.value['uf']\n        , this.formulario.value['cidade']\n        , this.formulario.value['servicoId'])\n      .then(prestadoresResult => {\n\n        if(!prestadoresResult){\n          ToastCustom.CustomToast(this.toastCtrl,\"Nenhum prestador encontrado.\",\"danger\",4000);\n          this.loadingContr.hideLoader();\n          return false;\n        }\n        let lstusuarioId = [];\n        lstusuarioId = prestadoresResult.map(x => { return x.usuarioId });\n        this.prestadores = prestadoresResult;\n\n        let lstIgrejaId = [];\n        lstIgrejaId = prestadoresResult.map(x => { return x.igrejas[0].igrejaId });\n\n        this.consultaMasterPrestador(lstusuarioId,lstIgrejaId).then(() => {\n          this.loadingContr.hideLoader();\n\n        }).catch(x => {\n          HandlerError.handler(x, this.toastCtrl);\n          this.loadingContr.hideLoader();\n        });\n\n      }).catch(x => {\n        HandlerError.handler(x, this.toastCtrl);\n        this.loadingContr.hideLoader();\n      });\n  }\n\n  private consultaMasterPrestador(lstusuarioId, lstIgrejaId): Promise<any> {\n    return new Promise<any>((result, reject) => {\n      // Recupera igreja \n      this.recuperaNomeIgreja(lstIgrejaId);\n\n      // Recupera Nome \n      this.recuperaNomePrestadores(lstusuarioId);\n\n      // Recupera Servicos\n      //this.recuperaServicosPorPrestadores(lstusuarioId);\n    });\n  }\n\n\n  private recuperaServicosPorPrestadores(lstusuarioId): Promise<any> {\n    return new Promise(() => {\n      this.prestadorService.recuperaServicosPorPrestadores(lstusuarioId)\n        .then(servicosPorPrestador => {\n          this.prestadores.map(x => {\n            x.servicos = servicosPorPrestador.find(y => { y.usuarioId == x.usuarioId });\n          })\n          this.loadingContr.hideLoader();\n\n        }).catch(x => {\n          HandlerError.handler(x, this.toastCtrl);\n          this.loadingContr.hideLoader();\n        });\n    });\n  }\n\n  private recuperaNomePrestadores(lstusuarioId): Promise<any> {\n    return new Promise(() => {\n      this.usuarioService.RecuperaNomeUsuarios(lstusuarioId)\n        .then(usuariosResult => {\n          this.prestadores.map(x => {\n            x.nome = usuariosResult.find(y => y.data.usuarioId == x.usuarioId).data.nome;\n            x.email = usuariosResult.find(y => y.data.usuarioId == x.usuarioId).data.email;\n          });\n          this.loadingContr.hideLoader();\n        }).catch(x => {\n          HandlerError.handler(x, this.toastCtrl);\n          this.loadingContr.hideLoader();\n        });\n    });\n  }\n\n  private recuperaNomeIgreja(lstIgrejaId): Promise<any> {\n    return new Promise(() => {\n      this.igrejaService.RecuperaNomeIgreja(lstIgrejaId)\n        .then(resultIgreja => {\n          this.prestadores.map(x => {\n            x.nomeIgreja = resultIgreja.find(y => y.data.id == x.igrejas[0].igrejaId).data.nomeIgreja;\n          });\n        }).catch(x => {\n          HandlerError.handler(x, this.toastCtrl);\n          this.loadingContr.hideLoader();\n        });\n    });\n  }\n\n  public detalhes(usuarioId){\n    this.router.navigate(['/visualizar-prestador'], { queryParams: { usuarioId: usuarioId } });\n  }\n}\n"]}